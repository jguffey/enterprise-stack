version: '3'
services:
  marketing:
    build:
      context: ../ui/marketing
    networks:
      - enterprise
    ports:
      - 8080:8080
    restart: unless-stopped
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=marketing.app.local
  spa:
    build:
      context: ../ui/spa
    networks:
      - enterprise
    ports:
      - 8081:3000
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=dev.app.local
    # For some reason, the container is running on port, but port not being exposed.
  # db:
  #   # TODO, choose service, mount db volume
  #   networks:
  #     - enterprise
  server:
    # TODO choose good python base, load app, connect DB
    build:
      context: ../backend
    ports:
      - 8001:80
    networks:
      - enterprise
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=api.app.local
  # dns:
  #   build:
  #     context: ../services/dns
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   ports:
  #     - 8000:80
    # networks:
    #   - enterprise
  # TODO: Tools will actually corrospond 1:1 with services here.
  # TODO(cont.): For example, a message bus would be a standalone service.
networks:
  enterprise:
    driver: bridge
